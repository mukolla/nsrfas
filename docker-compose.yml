version: '3'

services:

  #PHP Service
  php:
    build:
      context: docker/php
      dockerfile: Dockerfile
    container_name: 'nsrfas_php'
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: '/var/www'
    volumes:
      - ./:/var/www
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: 'nsrfas_web'
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  adminer:
    image: adminer
    container_name: 'nsrfas_adminer'
    restart: unless-stopped
    tty: true
    ports:
      - "8080:8080"
    networks:
      - app-network

###> doctrine/doctrine-bundle ###
  database:
    container_name: 'nsrfas_db'
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    networks:
      - app-network
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

#Docker Networks
networks:
  app-network:
    driver: bridge

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
